--
--	my_rom.vhd
--
--	generic VHDL version of ROM
--
--		DONT edit this file!
--		generated by leros.asm.LerosAsm
--

library ieee;
use ieee.std_logic_1164.all;
use ieee.numeric_std.all;

use work.leros_types.all;


entity sram_1r1w_16_256 is
port (
	 clk: in std_logic;
	 w_en_n: in std_logic; --active low
    waddr: in std_logic_vector(DM_BITS-1 downto 0);
	 rdaddr: in std_logic_vector(DM_BITS-1 downto 0);
	 wdata: in std_logic_vector(15 downto 0);
    rddata : out std_logic_vector(15 downto 0)
);
end sram_1r1w_16_256;


architecture rtl of sram_1r1w_16_256 is

component sram_0rw1r1w_16_256_lapis20 is
port(
	--write port
	clk0: in std_logic;
	csb0: in std_logic; --active low;
	addr0: in std_logic_vector(7 downto 0);
	din0: in std_logic_vector(15 downto 0);
	--read port
	clk1: in std_logic;
	csb1: in std_logic; --active low;
	addr1: in std_logic_vector(7 downto 0);
	dout1: out std_logic_vector(15 downto 0)
);
end component sram_0rw1r1w_16_256_lapis20;

begin

sram: sram_0rw1r1w_16_256_lapis20 port map (
	--write port
	clk0 => clk,
	csb0 => w_en_n,
	addr0(DM_BITS-1 downto 0) => waddr(DM_BITS-1 downto 0),
	din0(15 downto 0) => wdata(15 downto 0),
	--read port
	clk1 => clk,
	csb1 => '0',
	addr1(DM_BITS-1 downto 0) => rdaddr(DM_BITS-1 downto 0),
	dout1(15 downto 0) => rddata(15 downto 0)
);

end rtl;
